name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: "8.15.1"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
          NODEMAILER_EMAIL: ${{ secrets.NODEMAILER_EMAIL }}
          NODEMAILER_PASSWORD: ${{ secrets.NODEMAILER_PASSWORD }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          DISCORD_WEBHOOK_URL_INBOX: ${{ secrets.DISCORD_WEBHOOK_URL_INBOX }}
          DISCORD_WEBHOOK_URL_WRITER: ${{ secrets.DISCORD_WEBHOOK_URL_WRITER }}
          DISCORD_WEBHOOK_URL_PUBLISH: ${{ secrets.DISCORD_WEBHOOK_URL_PUBLISH }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          EBOOK_PRODUCT_ID: ${{ secrets.EBOOK_PRODUCT_ID }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
          AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}
          TURSO_AUTH_TOKEN: ${{ secrets.TURSO_AUTH_TOKEN }}
          TURSO_DATABASE_URL: ${{ secrets.TURSO_DATABASE_URL }}
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
          NEXT_PUBLIC_SANITY_STUDIO_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_STUDIO_PROJECT_ID}}
          NEXT_PUBLIC_SANITY_STUDIO_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_STUDIO_DATASET}}
          SANITY_STUDIO_PROJECT_ID: ${{ secrets.SANITY_STUDIO_PROJECT_ID}}
          SANITY_STUDIO_DATASET: ${{ secrets.SANITY_STUDIO_DATASET}}
          AWS_ARN_CERTIFICATE: ${{ secrets.AWS_ARN_CERTIFICATE }}
        run: |
          npx sst deploy --stage prod
